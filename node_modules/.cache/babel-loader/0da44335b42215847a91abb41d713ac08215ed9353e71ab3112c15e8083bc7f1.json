{"ast":null,"code":"import * as e from \"react\";\nimport { useFormContext as r, get as n } from \"react-hook-form\";\nvar s = function (s) {\n  var t = s.as,\n    a = s.errors,\n    m = s.name,\n    o = s.message,\n    i = s.render,\n    l = function (e, r) {\n      if (null == e) return {};\n      var n,\n        s,\n        t = {},\n        a = Object.keys(e);\n      for (s = 0; s < a.length; s++) r.indexOf(n = a[s]) >= 0 || (t[n] = e[n]);\n      return t;\n    }(s, [\"as\", \"errors\", \"name\", \"message\", \"render\"]),\n    f = r(),\n    c = n(a || f.formState.errors, m);\n  if (!c) return null;\n  var g = c.message,\n    u = c.types,\n    d = Object.assign({}, l, {\n      children: g || o\n    });\n  return e.isValidElement(t) ? e.cloneElement(t, d) : i ? i({\n    message: g || o,\n    messages: u\n  }) : e.createElement(t || e.Fragment, d);\n};\nexport { s as ErrorMessage };","map":{"version":3,"names":["s","ErrorMessage","t","as","a","errors","m","name","o","message","i","render","l","e","r","n","Object","keys","length","indexOf","f","c","formState","g","u","types","d","assign","children","isValidElement","cloneElement","messages","createElement","Fragment"],"sources":["C:\\Users\\dajun\\OneDrive\\바탕 화면\\stockwise-start-info\\node_modules\\@hookform\\error-message\\src\\ErrorMessage.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useFormContext, get, FieldErrors } from 'react-hook-form';\nimport { Props } from './types';\n\nconst ErrorMessage = <\n  TFieldErrors extends FieldErrors,\n  TAs extends\n    | undefined\n    | React.ReactElement\n    | React.ComponentType<any>\n    | keyof JSX.IntrinsicElements = undefined\n>({\n  as,\n  errors,\n  name,\n  message,\n  render,\n  ...rest\n}: Props<TFieldErrors, TAs>) => {\n  const methods = useFormContext();\n  const error = get(errors || methods.formState.errors, name);\n\n  if (!error) {\n    return null;\n  }\n\n  const { message: messageFromRegister, types } = error;\n  const props = Object.assign({}, rest, {\n    children: messageFromRegister || message,\n  });\n\n  return React.isValidElement(as)\n    ? React.cloneElement(as, props)\n    : render\n    ? (render({\n        message: messageFromRegister || message,\n        messages: types,\n      }) as React.ReactElement)\n    : React.createElement((as as string) || React.Fragment, props);\n};\n\nexport { ErrorMessage };\n"],"mappings":";;AAIM,IAAAA,CAAA,GAAe,SAAAC,CAAAD,CAAA;EAAA,IAQnBE,CAAA,GAAAF,CAAA,CAAAG,EAAA;IACAC,CAAA,GAAAJ,CAAA,CAAAK,MAAA;IACAC,CAAA,GAAAN,CAAA,CAAAO,IAAA;IACAC,CAAA,GAAAR,CAAA,CAAAS,OAAA;IACAC,CAAA,GAAAV,CAAA,CAAAW,MAAA;IACGC,CAAA,aAAAC,CAAA,EAAAC,CAAA;MAAA,YAAAD,CAAA;MAAA,IAAAE,CAAA;QAAAf,CAAA;QAAAE,CAAA;QAAAE,CAAA,GAAAY,MAAA,CAAAC,IAAA,CAAAJ,CAAA;MAAA,KAAAb,CAAA,MAAAA,CAAA,GAAAI,CAAA,CAAAc,MAAA,EAAAlB,CAAA,IAAAc,CAAA,CAAAK,OAAA,CAAAJ,CAAA,GAAAX,CAAA,CAAAJ,CAAA,YAAAE,CAAA,CAAAa,CAAA,IAAAF,CAAA,CAAAE,CAAA;MAAA,OAAAb,CAAA;IAAA,EAAAF,CAAA;IAEGoB,CAAA,GAAUN,CAAA;IACVO,CAAA,GAAQN,CAAA,CAAIX,CAAA,IAAUgB,CAAA,CAAQE,SAAA,CAAUjB,MAAA,EAAQC,CAAA;EAEtD,KAAKe,CAAA,EACH;EAGF,IAAiBE,CAAA,GAA+BF,CAAA,CAAxCZ,OAAA;IAA8Be,CAAA,GAAUH,CAAA,CAAVI,KAAA;IAChCC,CAAA,GAAQV,MAAA,CAAOW,MAAA,CAAO,IAAIf,CAAA,EAAM;MACpCgB,QAAA,EAAUL,CAAA,IAAuBf;IAAA;EAGnC,OAAOK,CAAA,CAAMgB,cAAA,CAAe3B,CAAA,IACxBW,CAAA,CAAMiB,YAAA,CAAa5B,CAAA,EAAIwB,CAAA,IACvBhB,CAAA,GACCA,CAAA,CAAO;IACND,OAAA,EAASc,CAAA,IAAuBf,CAAA;IAChCuB,QAAA,EAAUP;EAAA,KAEZX,CAAA,CAAMmB,aAAA,CAAe9B,CAAA,IAAiBW,CAAA,CAAMoB,QAAA,EAAUP,CAAA;AAAA;AAAA,SAAA1B,CAAA,IAAAC,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}